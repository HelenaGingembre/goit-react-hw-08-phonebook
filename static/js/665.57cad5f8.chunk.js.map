{"version":3,"file":"static/js/665.57cad5f8.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/FilterInput/FilterInput.styled.js","components/FilterInput/FilterInput.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","pages/Contacts.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n/*\nconst selectItemsByCategory = createSelector(\n  [\n    // Usual first input - extract value from `state`\n    state => state.items,\n    // Take the second arg, `category`, and forward to the output selector\n    (state, category) => category\n  ],\n  // Output selector gets (`items, category)` as args\n  (items, category) => items.filter(item => item.category === category)\n)\n */\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 10px 0;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const SectionPage = styled.section`\n  padding: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, SectionPage } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionPage>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionPage>\n  );\n};\n\nSection.propType = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 1px solid ${p => p.theme.colors.accent};\n  width: 500px;\n  padding: 20px;\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.blue_ciel};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  height: 25px;\n  margin-top: 3px;\n  font-weight: 400;\n  font-size: 13px;\n  outline: none;\n  border-radius: 5px;\n  border: 1px solid ${p => p.theme.colors.gray};\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n  box-sizing: border-box;\n`;\n\nexport const Btn = styled.button`\n  padding: 9px 20px;\n  min-width: 90px;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.white};\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.accent};\n  :hover {\n    background-image: ${p => p.theme.colors.hover};\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    border-color 250ms ease-in-out;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // обробник контрольованого інпута в onChange\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const resetForm = () => [setName(''), setNumber('')];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      toast.error(`${name} is already in contacts.`);\n      setName('');\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(10), name, number }));\n    toast.success(`Contact ${name} is add phonebook`);\n\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"name\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number telephone\"\n          value={number}\n          onChange={handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n};\n\n// ContactForm.propType = {\n//   value: PropTypes.string.isRequired,\n//   id: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ButtonDelete = styled.button`\n  margin-left: 10px;\n  margin-right: 10px;\n  padding: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.white};\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.accent};\n  :hover {\n    background-image: ${p => p.theme.colors.hover};\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    border-color 250ms ease-in-out;\n`;\nexport const ContactListLi = styled.li`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px dotted ${p => p.theme.colors.accent};\n`;\nexport const ContactListBox = styled.ul`\n  width: 500px;\n  list-style: circle;\n  padding: 20px;\n`;\n","import { useDispatch } from 'react-redux';\n// import { selectContacts } from 'redux/selectors';\nimport { removeContact } from 'redux/operations';\n\nimport { ContactListLi, ButtonDelete } from '../ContactList/ContactList.styled';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(removeContact(contact.id));\n\n  // const contacts = useSelector(selectContacts);\n  // console.log('contacts Item', contacts);\n  // const handleUpdate = contactId => {\n  //   const contact = contacts.find((contact.id) => id === contactId);\n  //   updateContact(contact);\n  // };\n  return (\n    <ContactListLi>\n      {contact.name}: {contact.phone}\n      <ButtonDelete onClick={handleDelete}>x</ButtonDelete>\n    </ContactListLi>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilterContacts } from 'redux/selectors';\n\nimport { ContactListItem } from '../ContactItem/ContactItem';\nimport { ContactListBox } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilterContacts);\n  // const filter = useSelector(selectFilter);\n  // const filterContacts = contacts.filter(({ name }) =>\n  //   name.toLowerCase().includes(filter.toLowerCase())\n  // );\n  console.log('contacts', contacts);\n  return (\n    <>\n      {contacts.length > 0 && filterContacts.length > 0 ? (\n        <ContactListBox>\n          {filterContacts.map(item => (\n            <ContactListItem contact={item} key={item.id} />\n          ))}\n        </ContactListBox>\n      ) : (\n        <h4>Phonebook is empty</h4>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 25px;\n  width: 300px;\n  margin-top: 3px;\n  font-weight: 400;\n  font-size: 13px;\n  outline: none;\n  border-radius: 5px;\n  border: 1px solid ${p => p.theme.colors.gray};\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n  box-sizing: border-box;\n`;\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from './FilterInput.styled';\nimport { setFilterContact } from '../../redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const FilterInput = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter name for Search Contact\"\n      value={filterValue}\n      onChange={({ target }) => dispatch(setFilterContact(target.value.trim()))}\n    />\n  );\n};\n\n// FilterInput.propTypes = {\n//   filter: PropTypes.string.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  width: 500px;\n  padding: 20px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.blue_ciel};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propType = {\n  children: PropTypes.node.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPhoneBooks } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { Outlet } from 'react-router-dom';\n\nimport { ToastContainer /*, toast*/ } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Section } from '../components/Section/Section';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { FilterInput } from '../components/FilterInput/FilterInput';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchPhoneBooks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Container>\n          <h4>Find contacts by name</h4>\n          <FilterInput />\n          {isLoading && !error && <Loader />}\n          <ContactList />\n        </Container>\n        <ToastContainer autoClose={2000} />\n        <Outlet></Outlet>\n      </Section>\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilterContacts","toLowerCase","includes","Title","styled","p","theme","colors","accent","SectionPage","Section","title","children","propType","PropTypes","Form","blue_ciel","Label","Input","gray","Btn","white","hover","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleChangeForm","target","onSubmit","event","preventDefault","normalizedName","contact","toast","addContact","htmlFor","type","placeholder","onChange","pattern","required","ButtonDelete","ContactListLi","ContactListBox","ContactListItem","phone","onClick","removeContact","ContactList","filterContacts","console","log","item","FilterInput","filterValue","setFilterContact","trim","MainContainer","Container","Contacts","useEffect","fetchPhoneBooks","Loader","autoClose","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}