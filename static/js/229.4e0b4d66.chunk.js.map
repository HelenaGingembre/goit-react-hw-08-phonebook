{"version":3,"file":"static/js/229.4e0b4d66.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/FilterInput/FilterInput.styled.js","components/FilterInput/FilterInput.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n/*\nconst selectItemsByCategory = createSelector(\n  [\n    // Usual first input - extract value from `state`\n    state => state.items,\n    // Take the second arg, `category`, and forward to the output selector\n    (state, category) => category\n  ],\n  // Output selector gets (`items, category)` as args\n  (items, category) => items.filter(item => item.category === category)\n)\n */\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin: 10px 0;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const SectionPage = styled.section`\n  padding: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title, SectionPage } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionPage>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionPage>\n  );\n};\n\nSection.propType = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  border: 1px solid ${p => p.theme.colors.accent};\n  width: 500px;\n  padding: 20px;\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.blue_ciel};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  margin-bottom: 10px;\n`;\nexport const Input = styled.input`\n  height: 25px;\n  margin-top: 3px;\n  font-weight: 400;\n  font-size: 13px;\n  outline: none;\n  border-radius: 5px;\n  border: 1px solid ${p => p.theme.colors.gray};\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n  box-sizing: border-box;\n`;\n\nexport const Btn = styled.button`\n  padding: 9px 20px;\n  min-width: 90px;\n  text-transform: uppercase;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.white};\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.accent};\n  :hover {\n    background-image: ${p => p.theme.colors.hover};\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    border-color 250ms ease-in-out;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Form, Label, Input, Btn } from './ContactForm.styled';\nimport { nanoid } from 'nanoid';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  console.log('contacts form', contacts);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // обробник контрольованого інпута в onChange\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const resetForm = () => [setName(''), setNumber('')];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      toast.error(`${name} is already in contacts.`);\n      setName('');\n      return;\n    }\n\n    dispatch(addContact({ id: nanoid(10), name, number }));\n    toast.success(`Contact ${name} is add phonebook`);\n\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeForm}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"name\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter number telephone\"\n          value={number}\n          onChange={handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Btn type=\"submit\">Add contact</Btn>\n    </Form>\n  );\n};\n\n// ContactForm.propType = {\n//   value: PropTypes.string.isRequired,\n//   id: PropTypes.string.isRequired,\n//   onChange: PropTypes.func.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const ButtonDelete = styled.button`\n  margin-left: 10px;\n  margin-right: 10px;\n  padding: 2px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${p => p.theme.colors.white};\n  border-radius: 4px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  cursor: pointer;\n  background-color: ${p => p.theme.colors.accent};\n  :hover {\n    background-image: ${p => p.theme.colors.hover};\n  }\n  transition: color 250ms ease-in-out, background-color 250ms ease-in-out,\n    border-color 250ms ease-in-out;\n`;\nexport const ContactListLi = styled.li`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px dotted ${p => p.theme.colors.accent};\n`;\nexport const ContactListBox = styled.ul`\n  width: 500px;\n  list-style: circle;\n  padding: 20px;\n`;\n","import { useDispatch } from 'react-redux';\n// import { selectContacts } from 'redux/selectors';\nimport { removeContact } from 'redux/contacts/operations';\n\nimport { ContactListLi, ButtonDelete } from '../ContactList/ContactList.styled';\n\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(removeContact(contact.id));\n\n  return (\n    <ContactListLi>\n      {contact.name}: {contact.number}\n      <ButtonDelete onClick={handleDelete}>x</ButtonDelete>\n    </ContactListLi>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectContacts, selectFilterContacts } from 'redux/contacts/selectors';\n\nimport { ContactListItem } from '../ContactItem/ContactItem';\nimport { ContactListBox } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterContacts = useSelector(selectFilterContacts);\n  // const filter = useSelector(selectFilter);\n  // const filterContacts = contacts.filter(({ name }) =>\n  //   name.toLowerCase().includes(filter.toLowerCase())\n  // );\n  console.log('contacts', contacts);\n  return (\n    <>\n      {contacts.length > 0 && filterContacts.length > 0 ? (\n        <ContactListBox>\n          {filterContacts.map(contact => (\n            <ContactListItem contact={contact} key={contact.id} />\n          ))}\n        </ContactListBox>\n      ) : (\n        <h4>Phonebook is empty</h4>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  height: 25px;\n  width: 300px;\n  margin-top: 3px;\n  font-weight: 400;\n  font-size: 13px;\n  outline: none;\n  border-radius: 5px;\n  border: 1px solid ${p => p.theme.colors.gray};\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n  box-sizing: border-box;\n`;\n","// import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from './FilterInput.styled';\nimport { setFilterContact } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nexport const FilterInput = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n  return (\n    <Input\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Enter name for Search Contact\"\n      value={filterValue}\n      onChange={({ target }) => dispatch(setFilterContact(target.value.trim()))}\n    />\n  );\n};\n\n// FilterInput.propTypes = {\n//   filter: PropTypes.string.isRequired,\n// };\n","import styled from 'styled-components';\n\nexport const MainContainer = styled.div`\n  width: 500px;\n  padding: 20px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  border-radius: 5px;\n  background-color: ${p => p.theme.colors.blue_ciel};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MainContainer } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propType = {\n  children: PropTypes.node.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { fetchPhoneBooks } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport { Outlet } from 'react-router-dom';\n\nimport { ToastContainer /*, toast*/ } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Section } from '../components/Section/Section';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { FilterInput } from '../components/FilterInput/FilterInput';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  // console.log('fetchPhoneBooks ', fetchPhoneBooks());\n  useEffect(() => {\n    dispatch(fetchPhoneBooks());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Container>\n          <h4>Find contacts by name</h4>\n          <FilterInput />\n          {isLoading && !error && <Loader />}\n          <ContactList />\n        </Container>\n        <ToastContainer autoClose={2000} />\n        <Outlet></Outlet>\n      </Section>\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilterContacts","createSelector","name","toLowerCase","includes","Title","styled","p","theme","colors","accent","SectionPage","Section","title","children","propType","PropTypes","Form","blue_ciel","Label","Input","gray","Btn","white","hover","ContactForm","dispatch","useDispatch","useSelector","console","log","useState","setName","number","setNumber","handleChangeForm","target","value","onSubmit","event","preventDefault","normalizedName","find","contact","toast","addContact","id","nanoid","htmlFor","type","placeholder","onChange","pattern","required","ButtonDelete","ContactListLi","ContactListBox","ContactListItem","onClick","removeContact","ContactList","filterContacts","length","map","FilterInput","filterValue","setFilterContact","trim","MainContainer","Container","Contacts","useEffect","fetchPhoneBooks","Helmet","Loader","autoClose"],"sourceRoot":""}